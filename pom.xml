<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <groupId>com.iflytek.ebg.ct</groupId>
    <artifactId>ect-eureka-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ect-eureka-server</name>
    <description>机考（企业版）注册中心</description>

    <properties>
        <!-- JDK -->
        <java.version>1.8</java.version>

        <!-- Maven -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Spring -->
        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <spring-boot-maven-compiler.version>2.1.4.RELEASE</spring-boot-maven-compiler.version>

        <!-- Third Party -->
        <druid.version>1.1.21</druid.version>

        <mybatis-plus-boot-starter.version>3.2.0</mybatis-plus-boot-starter.version>
        <mybatis-plus-generator.version>3.2.0</mybatis-plus-generator.version>
        <velocity-engine-core.version>2.1</velocity-engine-core.version>

        <swagger.version>2.9.2</swagger.version>
        <apollo.version>1.6.0</apollo.version>
    </properties>

    <repositories>
        <repository>
            <id>iflytek-nexus</id>
            <name>Public Repository</name>
            <url>http://maven.iflytek.com:8081/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>iflytek-nexus</id>
            <name>Public Repository</name>
            <url>http://maven.iflytek.com:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Start -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring End -->

            <!-- Apollo Start -->
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>
            <!-- Apollo End -->
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--Eureka注册中心 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <!--自省和监控的集成功能 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--注册中心 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!--负载均衡-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency>

        <!--熔断器-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>

        <!-- 配置中心 -->
        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-client</artifactId>
        </dependency>

        <!-- 调用链监控sleuth+zipkin -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <!-- 服务间调用 Feign -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-gson</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <!-- 本地IDE开发环境 -->
        <profile>
            <id>Dev</id>
            <properties>
                <profiles.log.config.path>classpath:</profiles.log.config.path>
                <profiles.config.outputDirectory>${basedir}/target/classes</profiles.config.outputDirectory>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 部署打jar包 -->
        <profile>
            <id>Deploy</id>
            <properties>
                <profiles.log.config.path>./config/</profiles.log.config.path>
                <profiles.config.outputDirectory>${basedir}/target/config</profiles.config.outputDirectory>
            </properties>
        </profile>
    </profiles>

    <build>
        <!-- 打包后的JAR包名称 -->
        <finalName>ect-gateway-${project.version}</finalName>
        <!-- 设置资源文件的打包方式 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 配置文件不放进JAR包，统一采用外部配置文件的方式 -->
                <excludes>
                    <exclude>*.properties</exclude>
                    <exclude>*.yml</exclude>
                    <exclude>*.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Maven编译插件，指定Java编译版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!-- Maven 资源处理插件，将配置文件打包到指定目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!-- 将资源文件复制到conf目录下 -->
                            <outputDirectory>${profiles.config.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>*.properties</include>
                                        <include>*.yml</include>
                                        <include>*.xml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- SpringBoot打包插件，可打包成可执行JAR包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-compiler.version}</version>
                <configuration>
                    <!-- 指定启动类 -->
                    <mainClass>com.iflytek.ebg.ct.ect.gateway.GatewayApplication</mainClass>
                    <!-- 指定打成JAR包 -->
                    <layout>JAR</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
